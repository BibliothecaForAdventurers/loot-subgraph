type Account @entity {
  id: ID!
  balances: [Balance!]! @derivedFrom(field: "account")
  transfersOperator: [Transfer!] @derivedFrom(field: "operator")
  transfersFrom: [Transfer!]! @derivedFrom(field: "from")
  transfersTo: [Transfer!]! @derivedFrom(field: "to")
  approvalsOwner: [Approval!]! @derivedFrom(field: "owner")
  approvalsSpender: [Approval!]! @derivedFrom(field: "spender")
}

type TokenRegistry @entity {
  id: ID!
  tokens: [Token!]! @derivedFrom(field: "registry")
}
enum TokenType {
  ERC20
  ERC1155
}
type Token @entity {
  id: ID!
  registry: TokenRegistry
  name: String
  symbol: String
  decimals: Int
  type: TokenType!
  identifier: BigInt!
  URI: String
  totalSupply: BigDecimal!
  balances: [Balance!]! @derivedFrom(field: "token")
  transfers: [Transfer!]! @derivedFrom(field: "token")
  approvals: [Approval!]! @derivedFrom(field: "token")
}

type Balance @entity {
  id: ID!
  token: Token!
  account: Account!
  value: BigDecimal!
  valueExact: BigInt!
  transfersFrom: [Transfer!]! @derivedFrom(field: "fromBalance")
  transfersTo: [Transfer!]! @derivedFrom(field: "toBalance")
}

type Transfer implements Event @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  token: Token!
  operator: Account
  from: Account!
  fromBalance: Balance
  to: Account!
  toBalance: Balance
  value: BigDecimal!
  valueExact: BigInt!
}

type Approval implements Event @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  token: Token!
  owner: Account!
  spender: Account!
  value: BigInt!
}

interface Event {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
}

type Transaction @entity {
  id: ID!
  timestamp: BigInt!
  blockNumber: BigInt!
  events: [Event!]! @derivedFrom(field: "transaction")
}

type PersistentStringArray @entity {
  id: ID!
  values: [String!]!
}

type PersistentString @entity {
  id: ID!
  value: String!
}
